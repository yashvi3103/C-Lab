22.What is the "switch case" Statement?

The "switch case" statement is a way to make decisions based on the value of a single expression. It provides an organized and efficient approach for handling multiple possible cases or conditions.

Why Use the "switch case" Statement?

The "switch case" statement is useful when you have a single value that you want to compare against different cases, each of which triggers a different action. It's a cleaner alternative to using multiple "if-else if" statements.

How Does the "switch case" Statement Work?

The "switch case" statement checks the value of a given expression against a series of cases. When a matching case is found, the corresponding code block is executed.

Example in Easy Terms:

Suppose you're building a program that displays a message based on the day of the week:


#include <stdio.h>

int main() {
    int day = 3; // 1 for Monday, 2 for Tuesday, and so on...

    switch (day) {
        case 1:
            printf("It's Monday. Get ready for the week!\n");
            break;
        case 2:
            printf("It's Tuesday. Keep going!\n");
            break;
        case 3:
            printf("It's Wednesday. Halfway there!\n");
            break;
        case 4:
            printf("It's Thursday. Almost Friday!\n");
            break;
        case 5:
            printf("It's Friday. Weekend is almost here!\n");
            break;
        default:
            printf("It's the weekend or an invalid day.\n");
    }

    return 0;
}
In this example, the "switch case" statement checks the value of day and executes the appropriate code block based on the matching case.

Why the "switch case" Statement is Important:

The "switch case" statement offers a clear and concise way to handle different cases based on the value of a single expression. It's particularly useful when you have many possible values to compare against.